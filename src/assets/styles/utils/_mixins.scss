/* src/assets/styles/utils/_mixins.scss  */

@mixin row() {
  font-size: 0;
  &:first-child{ 
      padding-left: 0 !important;
  }
  &:last-child{
      padding-right: 0 !important;
  }
}
// @mixin col($col, $sum, $gap: $col-gutter, $align: top) {
//   width: percentage($col/$sum);
//   font-size: 16px;
//   display: inline-block;
//   vertical-align: $align;
//   box-sizing: border-box;
//   padding-left: $gap / 2;
//   padding-right: $gap / 2;
// }

@mixin container() {
 @extend .container;
}

@mixin full-width() {
  width: 100%;
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin isFlex($align: center, $justify: center, $direction: row, $wrap: wrap) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

@mixin bgImage($url, $repeat: no-repeat, $position: center, $size: initial) {
  background-image: url($url);
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
}

@mixin center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER

/*
0 - 600px:          Phone
600 - 900px:        Tablet portrait
900 - 1200px:       Tablet landscape
1200-1800px:        Normal styles apply - desktop first approach
1800px+ :           Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components


*/

// @mixin respond($breakpoint) {
//     @if $breakpoint == phone {
//         @media only screen and (min-width: $phone) {@content}; //600px / 16 = 37.5
//     }
//     @if $breakpoint == tab-port {
//         @media only screen and (min-width: $tab-port) {@content};  //900px / 16 = 56.25
//     }
//     @if $breakpoint == tab-land {
//         @media only screen and (min-width: $tab-land) {@content}; //1200px / 16 = 75
//     }
//     @if $breakpoint == laptop {
//         @media only screen and (min-width: $laptop) {@content}; //1200px / 16 = 112.5
//     }
//     @if $breakpoint == big-desktop {
//         @media only screen and (min-width: $big-desktop) {@content}; //1200px / 16 = 112.5
//     }
// }

@mixin border-fill($place, $duration, $delay) {
  position: absolute;
  // top: -1rem;
  height: 4px;
  width: 10px;
  background-image: linear-gradient(90deg, $blue-light, $blue-dark);
  @if $place == up { top: 12rem; }
  @if $place == bottom { bottom: -3.5rem; }
  animation: add-line $duration $delay ease forwards;

  // $place: -.5rem;

  @keyframes add-line {
    from {
      width: 1%;
    }
    to {
      width: 100%;
    }
  }


  // &::before {
  //   content: '';
  //   position: absolute;
  //   top: -1rem;
  //   // margin-top: 1rem;
  //   background-image: linear-gradient(90deg, $blue-light, $blue-dark);
  //   width: 1%;
  //   height: 4px;
  //   background-color: red;
  //   transform: all 4s ease;
  // }

  // &.fill-border::before {
  //   width: 100%;
  // }
}


@mixin arrow($class, $size, $weight, $color, $dir, $bg) {
    @if $dir == up {
        $dir : bottom;
    }
    @elseif $dir == down {
        $dir : top;
    }
    @elseif $dir == right {
        $dir : left;
    } 
    @else {
        $dir : right;
    }
  
   .#{$class} {
       position:relative;
       display:block;
       height: $size * 2;
    }
  
   .#{$class}:before,
   .#{$class}:after {
       position:absolute;
       display:block;
       content:"";
       /*Size*/
       border:$size solid transparent;
    }
  
    .#{$class}:before {
        #{$dir}:0;
        /*Arrow Color*/
        border-#{$dir}-color:$color;
    }
  
   .#{$class}:after {
      /*Thickness*/
      #{$dir}:-$weight;
      border-#{$dir}-color:$bg;
   }
  }
  